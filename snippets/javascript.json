{
  // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Volto Block Schema": {
    "prefix": ["blockSchema", "voltoBlockSchema"],
    "body": [
      "import messages from './messages';",
      "",
      "const Schema = ({ intl }) => {",
      "return {",
      "    title: intl.formatMessage(messages.blocktitle),",
      "    block: 'block',",
      "    fieldsets: [",
      "                        {",
      "        id: 'default',",
      "        title: intl.formatMessage(messages.default),",
      "        fields: ['url', 'title'",
      "                            ],",
      "                        },",
      "                    ],",
      "",
      "    properties: {",
      "    url: {",
      "        title: intl.formatMessage(messages.URL),",
      "        widget: 'url',",
      "                        },",
      "    title: {",
      "        title: intl.formatMessage(messages.title),",
      "                        },",
      "                    },",
      "    required: [],",
      "                };",
      "            };",
      "",
      "export default Schema;"
    ],
    "description": "Volto Block Base Schema"
  },
  "Volto Block Config": {
    "prefix": ["voltoBlockConfig"],
    "body": [
      "  config.blocks.blocksConfig.block06 = {",
      "    id: 'block06',",
      "    title: 'Block 06',",
      "    view: BlockView,",
      "    //edit: BlockEdit,",
      "    blockSchema: BlockSchema,",
      "    icon: imagesSVG,",
      "    sidebarTab: 1,",
      "    variations: [",
      "        {",
      "        id: 'variation01',",
      "        title: 'Variation 01',",
      "        isDefault: true,",
      "        template: VariationView0601,",
      "        },",
      "        {",
      "        id: 'variation02',",
      "        title: 'Variation 02',",
      "        isDefault: false,",
      "        template: VariationView0602,",
      "        schemaEnhancer: schemaEnhancerBlock06Variation02,",
      "        },",
      "    ],",
      "};"
    ],
    "description": "Volto block configuration boilerplate"
  },
  "Volto Schema Enhancer function": {
    "prefix": ["voltoSchemaEnhancer"],
    "body": [
      "const schemaEnhancerVariation = ({ formData, schema, intl}) => {",
      "",
      "  schema.properties.color = {",
      "    title: 'Color',",
      "  };",
      "  schema.fieldsets[0].fields.push('color');",
      "  return schema;",
      "};",
      "",
      "export default schemaEnhancerVariation;"
    ],
    "description": "Volto schema enhancer function"
  }
}
